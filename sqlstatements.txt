-- COMMENTS (READABILITY OF CODE)
-- STATIC VALUES
SELECT 'TODAY IS WEDNESDAY';
-- ARITHMETIC OPERATION
-- USING INBUILD ARITHMETIC OPERATIONS
SELECT PI();
SELECT 100 + 200;
SELECT MOD(45,7);
SELECT SQRT(25);
SELECT ROUND(-1.23);
 SELECT ROUND(-1.58);
 SELECT ROUND(1.58);
 
 -- STRING OPERATIONS
SELECT  '1' + '1'; -- ARITHMETIC OPERATIONS
SELECT  '1' + 'ABC1'; 
SELECT CONCAT('1','1');
SELECT CONCAT('1','ABC1');
-- USER DEFINED COLUMN HEADING
SELECT CONCAT('1','ABC1') AS 'CONTATENATED VALUE';
SELECT FIRST_NAME, LAST_NAME, CONCAT (FIRST_NAME, LAST_NAME) FROM ACTOR;
SELECT DATE_FORMAT(LAST_UPDATE, '%m/%d/%y') as LAST_UPDATED FROM ACTOR;
SELECT DISTINCT FIRST_NAME FROM ACTOR ORDER BY FIRST_NAME;
SELECT COUNT(*) FROM ACTOR;
SELECT COUNT(FIRST_NAME) FROM ACTOR;
-- Not equal (<> or !=)
SELECT actor_id, first_name, last_name FROM sakila.actor WHERE actor_id <> 1;
SELECT actor_id, first_name, last_name FROM sakila.actor WHERE first_name != 'Nick';

SELECT * FROM sakila.actor WHERE NOT (first_name = 'KENNETH' OR (last_name = 'TEMPLE' AND actor_id < 100));
SELECT * FROM sakila.actor WHERE first_name = 'KENNETH' OR NOT(last_name = 'TEMPLE' AND actor_id > 100);

-- UNION
SELECT 1 AS 'NUMBER','RED' AS 'COLOR'  
UNION   
SELECT 2,'GREEN'  
UNION ALL  
SELECT 1,'RED';  

SELECT TITLE FROM FILM
UNION
SELECT FIRST_NAME FROM ACTOR;


CREATE TABLE table2
(ID INT, Value VARCHAR(10));
INSERT INTO Table2 (ID, Value)
SELECT 2,'BASKET'
UNION ALL
SELECT 3,'BASE'
UNION ALL
SELECT 6,'CRICKET'
UNION ALL
SELECT 7,'FOOT';
-- ----------- JOINS ----------------------
-- CROSS JION
SELECT * FROM Table1 CROSS JOIN TABLE2;
-- INNER JOIN
SELECT * FROM Table1  INNER JOIN TABLE2 
ON Table1.ID = Table2.ID; 
-- LEFT JOIN
SELECT * FROM Table1 LEFT JOIN TABLE2
ON Table1.ID = Table2.ID;
SELECT * FROM Table1 LEFT OUTER JOIN TABLE2
ON Table1.ID = Table2.ID;

-- RIGHT JOIN
SELECT * FROM Table1 
RIGHT JOIN TABLE2
ON Table1.ID = Table2.ID;

SELECT * FROM Table1 
RIGHT OUTER JOIN TABLE2
ON Table1.ID = Table2.ID;

SELECT TITLE, NAME FROM FILM
INNER JOIN LANGUAGE 
ON FILM.LANGUAGE_ID = LANGUAGE.LANGUAGE_ID;

SELECT TITLE, NAME FROM FILM, LANGUAGE 
WHERE FILM.LANGUAGE_ID = LANGUAGE.LANGUAGE_ID;

SELECT FIRST_NAME, TITLE FROM ACTOR
INNER JOIN FILM_ACTOR ON ACTOR.ACTOR_ID = FILM_ACTOR.ACTOR_ID
INNER JOIN FILM ON FILM_ACTOR.FILM_ID = FILM.FILM_ID;

-- CONSTRAINTS
-- PRIMARY KEY
CREATE TABLE NEWAUTHOR1
(AUT_ID CHAR(5) NOT NULL PRIMARY KEY, 
AUT_NAME VARCHAR(100) NOT NULL
);
insert into newauthor1 values (2,'MONK');
insert into newauthor1 values (1,'MONKS');
SELECT * FROM NEWAUTHOR1;
DROP TABLE NEWBOOK1;
-- FOREIGN KEY
CREATE TABLE NEWBOOK1(
BOOK_ID CHAR(5) NOT NULL PRIMARY KEY,
BOOK_NAME VARCHAR(50) NOT NULL,
AUT_ID CHAR(5),
FOREIGN KEY (AUT_ID) REFERENCES NEWAUTHOR1(AUT_ID)
);
DESCRIBE NEWAUTHOR1;
DESCRIBE NEWBOOK1;
SELECT * FROM NEWBOOK1;
insert into NEWBOOK1 values (1,'MONKS',3);
insert into NEWBOOK1 values (2,'MONKS',NULL);
insert into NEWBOOK1 values (3,'SKY',NULL);
insert into NEWBOOK1 values (1,'SKY',1);
insert into NEWBOOK1 values (10,'EARTH',1);
insert into NEWBOOK1 values (10,'SKY',2);

-- COMPOSITE PRIMARY KEY
CREATE TABLE EMPLOYEETEMP (
FNAME CHAR(10),
LNAME CHAR(10),
CITY CHAR(10),
PRIMARY KEY (FNAME, LNAME)
);
DESCRIBE EMPLOYEETEMP;
SELECT * FROM EMPLOYEETEMP;
INSERT INTO EMPLOYEETEMP VALUES ('SAM', 'PETER', 'MUMBAI'); 
INSERT INTO EMPLOYEETEMP VALUES ('SAM', 'JOHN', 'MUMBAI'); 
INSERT INTO EMPLOYEETEMP VALUES ('ELTON', 'JOHN', 'MUMBAI'); 
-- ERROR 1062 (23000): Duplicate entry 'SAM-JOHN' for key 'employeetemp.PRIMARY'
INSERT INTO EMPLOYEETEMP VALUES ('SAM', 'JOHN', 'CHENNAI'); 
SELECT * FROM EMPLOYEETEMP; 
CREATE TABLE EMPLOYEEHOBBY(
FNAME CHAR(10),
LNAME CHAR(10),
HOBBY  CHAR(10),
FOREIGN KEY (FNAME,LNAME) REFERENCES EMPLOYEETEMP(FNAME,LNAME)
);
